/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    /** Gets all roads managed by TfL */
    get: operations["Road_Get"];
  };
  "/{ids}": {
    /** Gets the road with the specified id (e.g. A1) */
    get: operations["Road_GetByPathIds"];
  };
  "/{ids}/Status": {
    /** Gets the specified roads with the status aggregated over the date range specified, or now until the end of today if no dates are passed. */
    get: operations["Road_StatusByPathIdsQueryStartDateQueryEndDate"];
  };
  "/{ids}/Disruption": {
    /** Get active disruptions, filtered by road ids */
    get: operations["Road_DisruptionByPathIdsQueryStripContentQuerySeveritiesQueryCategoriesQuery"];
  };
  "/all/Street/Disruption": {
    /** Gets a list of disrupted streets. If no date filters are provided, current disruptions are returned. */
    get: operations["Road_DisruptedStreetsByQueryStartDateQueryEndDate"];
  };
  "/all/Disruption/{disruptionIds}": {
    /** Gets a list of active disruptions filtered by disruption Ids. */
    get: operations["Road_DisruptionByIdByPathDisruptionIdsQueryStripContent"];
  };
  "/Meta/Categories": {
    /** Gets a list of valid RoadDisruption categories */
    get: operations["Road_MetaCategories"];
  };
  "/Meta/Severities": {
    /** Gets a list of valid RoadDisruption severity codes */
    get: operations["Road_MetaSeverities"];
  };
}

export interface components {
  schemas: {
    Tfl: {
      /** @description The Id of the Corridor e.g. "A406" */
      id: string;
      /**
       * @description The display name of the Corridor e.g. "North Circular (A406)". This
       *             may be identical to the Id.
       */
      displayName: string;
      /** @description The group name of the Corridor e.g. "Central London". Most corridors are not grouped, in which case this field can be null. */
      group: string;
      /** @description Standard multi-mode status severity code */
      statusSeverity: string;
      /** @description Description of the status severity as applied to RoadCorridors */
      statusSeverityDescription: string;
      /**
       * @description The Bounds of the Corridor, given by the south-east followed by the north-west co-ordinate
       *             pair in geoJSON format e.g. "[[-1.241531,51.242151],[1.641223,53.765721]]"
       */
      bounds: string;
      /**
       * @description The Envelope of the Corridor, given by the corner co-ordinates of a rectangular (four-point) polygon
       *             in geoJSON format e.g. "[[-1.241531,51.242151],[-1.241531,53.765721],[1.641223,53.765721],[1.641223,51.242151]]"
       */
      envelope: string;
      /**
       * Format: date-time
       * @description The start of the period over which status has been aggregated, or null if this is the current corridor status.
       */
      statusAggregationStartDate: string;
      /**
       * Format: date-time
       * @description The end of the period over which status has been aggregated, or null if this is the current corridor status.
       */
      statusAggregationEndDate: string;
      /** @description URL to retrieve this Corridor. */
      url: string;
    };
    System: {
      /** Format: int32 */
      coordinateSystemId: number;
      wellKnownText: string;
      /** Format: byte */
      wellKnownBinary: string;
    };
    "System-2": {
      geography: components["schemas"]["System"];
    };
    "Tfl-2": {
      /** @description A 16 digit unique integer identifying a OS ITN (Ordnance Survey Integrated Transport Network) road link. */
      toid: string;
      /** @description geoJSON formatted LineString containing two latitude/longitude (WGS84) pairs that identify the start and end points of the street segment. */
      lineString: string;
      /**
       * Format: int64
       * @description The ID from the source system of the disruption that this street belongs to.
       */
      sourceSystemId: number;
      /** @description The key of the source system of the disruption that this street belongs to. */
      sourceSystemKey: string;
    };
    "Tfl-3": {
      /** @description Street name */
      name: string;
      /**
       * @description Type of road closure. Some example values:
       *             Open = road is open, not blocked, not closed, not restricted. It maybe that the disruption has been moved out of the carriageway.
       *             Partial Closure = road is partially blocked, closed or restricted.
       *             Full Closure = road is fully blocked or closed.
       */
      closure: string;
      /**
       * @description The direction of the disruption on the street. Some example values:
       *             All Directions
       *             All Approaches
       *             Clockwise
       *             Anti-Clockwise
       *             Northbound
       *             Eastbound
       *             Southbound
       *             Westbound
       *             Both Directions
       */
      directions: string;
      /** @description Geographic description of the sections of this street that are affected. */
      segments: components["schemas"]["Tfl-2"][];
      /**
       * Format: int64
       * @description The ID from the source system of the disruption that this street belongs to.
       */
      sourceSystemId: number;
      /** @description The key of the source system of the disruption that this street belongs to. */
      sourceSystemKey: string;
    };
    "Tfl-4": {
      projectId: string;
      schemeName: string;
      projectName: string;
      projectDescription: string;
      projectPageUrl: string;
      consultationPageUrl: string;
      /** Format: date-time */
      consultationStartDate: string;
      /** Format: date-time */
      consultationEndDate: string;
      /** Format: date-time */
      constructionStartDate: string;
      /** Format: date-time */
      constructionEndDate: string;
      boroughsBenefited: string[];
      cycleSuperhighwayId: string;
      /** @enum {string} */
      phase:
        | "Unscoped"
        | "Concept"
        | "ConsultationEnded"
        | "Consultation"
        | "Construction"
        | "Complete";
      contactName: string;
      contactEmail: string;
      externalPageUrl: string;
      projectSummaryPageUrl: string;
    };
    "Tfl-5": {
      /** Format: int32 */
      id: number;
      roadDisruptionId: string;
      isDiversion: boolean;
      multiLineString: components["schemas"]["System-2"];
      /** Format: date-time */
      startDate: string;
      /** Format: date-time */
      endDate: string;
      startTime: string;
      endTime: string;
    };
    "Tfl-6": {
      /** Format: int32 */
      id: number;
      roadDisruptionId: string;
      polygon: components["schemas"]["System-2"];
      /** Format: date-time */
      startDate: string;
      /** Format: date-time */
      endDate: string;
      startTime: string;
      endTime: string;
    };
    "Tfl-7": {
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
    };
    "Tfl-8": {
      /** @description Unique identifier for the road disruption */
      id: string;
      /** @description URL to retrieve this road disruption */
      url: string;
      /** @description Latitude and longitude (WGS84) of the centroid of the disruption, stored in a geoJSON-formatted string. */
      point: string;
      /** @description A description of the severity of the disruption. */
      severity: string;
      /**
       * Format: int32
       * @description An ordinal of the disruption based on severity, level of interest and corridor.
       */
      ordinal: number;
      /** @description Describes the nature of disruption e.g. Traffic Incidents, Works */
      category: string;
      /** @description Describes the sub-category of disruption e.g. Collapsed Manhole, Abnormal Load */
      subCategory: string;
      /** @description Full text of comments describing the disruption, including details of any road closures and diversions, where appropriate. */
      comments: string;
      /**
       * @description Text of the most recent update from the LSTCC on the state of the
       *              disruption, including the current traffic impact and any advice to
       *              road users.
       */
      currentUpdate: string;
      /**
       * Format: date-time
       * @description The time when the last CurrentUpdate description was recorded,
       *             or null if no CurrentUpdate has been applied.
       */
      currentUpdateDateTime: string;
      /** @description The Ids of affected corridors, if any. */
      corridorIds: string[];
      /**
       * Format: date-time
       * @description The date and time which the disruption started. For a planned disruption (i.e. planned road works) this date will be in the future.
       *             For unplanned disruptions, this will default to the date on which the disruption was first recorded, but may be adjusted by the operator.
       */
      startDateTime: string;
      /**
       * Format: date-time
       * @description The date and time on which the disruption ended. For planned disruptions, this date will have a valid value. For unplanned
       *             disruptions in progress, this field will be omitted.
       */
      endDateTime: string;
      /**
       * Format: date-time
       * @description The date and time on which the disruption was last modified in the system. This information can reliably be used by a developer to quickly
       *             compare two instances of the same disruption to determine if it has been changed.
       */
      lastModifiedTime: string;
      /**
       * @description This describes the level of potential impact on traffic operations of the disruption.
       *             High = e.g. a one-off disruption on a major or high profile route which will require a high level of operational attention
       *             Medium = This is the default value
       *             Low = e.g. a frequently occurring disruption which is well known
       */
      levelOfInterest: string;
      /** @description Main road name / number (borough) or preset area name where the disruption is located. This might be useful for a map popup where space is limited. */
      location: string;
      /**
       * @description This describes the status of the disruption.
       *             Active = currently in progress
       *             Active Long Term = currently in progress and long term
       *             Scheduled = scheduled to start within the next 180 days
       *             Recurring Works = planned maintenance works that follow a regular routine or pattern and whose next occurrence is to start within the next 180 days.
       *             Recently Cleared = recently cleared in the last 24 hours
       *             Note that the status of Scheduled or Recurring Works disruptions will change to Active when they start, and will change status again when they end.
       */
      status: string;
      geography: components["schemas"]["System-2"];
      geometry: components["schemas"]["System-2"];
      /** @description A collection of zero or more streets affected by the disruption. */
      streets: components["schemas"]["Tfl-3"][];
      /** @description True if the disruption is planned on a future date that is open to change */
      isProvisional: boolean;
      /**
       * @description True if any of the affected Streets have a "Full Closure" status, false otherwise. A RoadDisruption that has HasClosures is considered a
       *             Severe or Serious disruption for severity filtering purposes.
       */
      hasClosures: boolean;
      /** @description The text of any associated link */
      linkText: string;
      /** @description The url of any associated link */
      linkUrl: string;
      roadProject: components["schemas"]["Tfl-4"];
      /**
       * Format: date-time
       * @description TDM Additional properties
       */
      publishStartDate: string;
      /** Format: date-time */
      publishEndDate: string;
      timeFrame: string;
      roadDisruptionLines: components["schemas"]["Tfl-5"][];
      roadDisruptionImpactAreas: components["schemas"]["Tfl-6"][];
      recurringSchedules: components["schemas"]["Tfl-7"][];
    };
    "System-3": { [key: string]: unknown };
    "Tfl-9": {
      modeName: string;
      /** Format: int32 */
      severityLevel: number;
      description: string;
    };
    Get200ApplicationJsonResponse: components["schemas"]["Tfl"][];
    Get200TextJsonResponse: components["schemas"]["Tfl"][];
    Get200ApplicationXmlResponse: components["schemas"]["Tfl"][];
    Get200TextXmlResponse: components["schemas"]["Tfl"][];
    "ids-Get200ApplicationJsonResponse": components["schemas"]["Tfl"][];
    "ids-Get200TextJsonResponse": components["schemas"]["Tfl"][];
    "ids-Get200ApplicationXmlResponse": components["schemas"]["Tfl"][];
    "ids-Get200TextXmlResponse": components["schemas"]["Tfl"][];
    "ids-StatusGet200ApplicationJsonResponse": components["schemas"]["Tfl"][];
    "ids-StatusGet200TextJsonResponse": components["schemas"]["Tfl"][];
    "ids-StatusGet200ApplicationXmlResponse": components["schemas"]["Tfl"][];
    "ids-StatusGet200TextXmlResponse": components["schemas"]["Tfl"][];
    "ids-DisruptionGet200ApplicationJsonResponse": components["schemas"]["Tfl-8"][];
    "ids-DisruptionGet200TextJsonResponse": components["schemas"]["Tfl-8"][];
    "ids-DisruptionGet200ApplicationXmlResponse": components["schemas"]["Tfl-8"][];
    "ids-DisruptionGet200TextXmlResponse": components["schemas"]["Tfl-8"][];
    "ids-DisruptionGet200ApplicationGeo-jsonResponse": components["schemas"]["Tfl-8"][];
    MetaCategoriesGet200ApplicationJsonResponse: string[];
    MetaCategoriesGet200TextJsonResponse: string[];
    MetaCategoriesGet200ApplicationXmlResponse: string[];
    MetaCategoriesGet200TextXmlResponse: string[];
    MetaSeveritiesGet200ApplicationJsonResponse: components["schemas"]["Tfl-9"][];
    MetaSeveritiesGet200TextJsonResponse: components["schemas"]["Tfl-9"][];
    MetaSeveritiesGet200ApplicationXmlResponse: components["schemas"]["Tfl-9"][];
    MetaSeveritiesGet200TextXmlResponse: components["schemas"]["Tfl-9"][];
  };
}

export interface operations {
  /** Gets all roads managed by TfL */
  Road_Get: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Get200ApplicationJsonResponse"];
          "text/json": components["schemas"]["Get200TextJsonResponse"];
          "application/xml": components["schemas"]["Get200ApplicationXmlResponse"];
          "text/xml": components["schemas"]["Get200TextXmlResponse"];
        };
      };
    };
  };
  /** Gets the road with the specified id (e.g. A1) */
  Road_GetByPathIds: {
    parameters: {
      path: {
        /** Comma-separated list of road identifiers e.g. "A406, A2" (a full list of supported road identifiers can be found at the /Road/ endpoint) */
        ids: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["ids-Get200ApplicationJsonResponse"];
          "text/json": components["schemas"]["ids-Get200TextJsonResponse"];
          "application/xml": components["schemas"]["ids-Get200ApplicationXmlResponse"];
          "text/xml": components["schemas"]["ids-Get200TextXmlResponse"];
        };
      };
    };
  };
  /** Gets the specified roads with the status aggregated over the date range specified, or now until the end of today if no dates are passed. */
  Road_StatusByPathIdsQueryStartDateQueryEndDate: {
    parameters: {
      path: {
        /** Comma-separated list of road identifiers e.g. "A406, A2" or use "all" to ignore id filter (a full list of supported road identifiers can be found at the /Road/ endpoint) */
        ids: string;
      };
      query: {
        /** Format - date-time (as date-time in RFC3339). The start date to aggregate status from */
        startDate?: string;
        /** Format - date-time (as date-time in RFC3339). The end date to aggregate status up to */
        endDate?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["ids-StatusGet200ApplicationJsonResponse"];
          "text/json": components["schemas"]["ids-StatusGet200TextJsonResponse"];
          "application/xml": components["schemas"]["ids-StatusGet200ApplicationXmlResponse"];
          "text/xml": components["schemas"]["ids-StatusGet200TextXmlResponse"];
        };
      };
    };
  };
  /** Get active disruptions, filtered by road ids */
  Road_DisruptionByPathIdsQueryStripContentQuerySeveritiesQueryCategoriesQuery: {
    parameters: {
      path: {
        /** Comma-separated list of road identifiers e.g. "A406, A2" use all for all to ignore id filter (a full list of supported road identifiers can be found at the /Road/ endpoint) */
        ids: string;
      };
      query: {
        /** Optional, defaults to false. When true, removes every property/node except for id, point, severity, severityDescription, startDate, endDate, corridor details, location, comments and streets */
        stripContent?: boolean;
        /** an optional list of Severity names to filter on (a valid list of severities can be obtained from the /Road/Meta/severities endpoint) */
        severities?: unknown[];
        /** an optional list of category names to filter on (a valid list of categories can be obtained from the /Road/Meta/categories endpoint) */
        categories?: unknown[];
        /** Optional, defaults to true. When true, always includes disruptions that have road closures, regardless of the severity filter. When false, the severity filter works as normal. */
        closures?: boolean;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["ids-DisruptionGet200ApplicationJsonResponse"];
          "text/json": components["schemas"]["ids-DisruptionGet200TextJsonResponse"];
          "application/xml": components["schemas"]["ids-DisruptionGet200ApplicationXmlResponse"];
          "text/xml": components["schemas"]["ids-DisruptionGet200TextXmlResponse"];
          "application/geo+json": components["schemas"]["ids-DisruptionGet200ApplicationGeo-jsonResponse"];
        };
      };
    };
  };
  /** Gets a list of disrupted streets. If no date filters are provided, current disruptions are returned. */
  Road_DisruptedStreetsByQueryStartDateQueryEndDate: {
    parameters: {
      query: {
        /** Format - date-time (as date-time in RFC3339). Optional, the start time to filter on. */
        startDate?: string;
        /** Format - date-time (as date-time in RFC3339). Optional, The end time to filter on. */
        endDate?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["System-3"];
          "text/json": components["schemas"]["System-3"];
          "application/xml": components["schemas"]["System-3"];
          "text/xml": components["schemas"]["System-3"];
        };
      };
    };
  };
  /** Gets a list of active disruptions filtered by disruption Ids. */
  Road_DisruptionByIdByPathDisruptionIdsQueryStripContent: {
    parameters: {
      path: {
        /** Comma-separated list of disruption identifiers to filter by. */
        disruptionIds: string;
      };
      query: {
        /** Optional, defaults to false. When true, removes every property/node except for id, point, severity, severityDescription, startDate, endDate, corridor details, location and comments. */
        stripContent?: boolean;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Tfl-8"];
          "text/json": components["schemas"]["Tfl-8"];
          "application/xml": components["schemas"]["Tfl-8"];
          "text/xml": components["schemas"]["Tfl-8"];
          "application/geo+json": components["schemas"]["Tfl-8"];
        };
      };
    };
  };
  /** Gets a list of valid RoadDisruption categories */
  Road_MetaCategories: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["MetaCategoriesGet200ApplicationJsonResponse"];
          "text/json": components["schemas"]["MetaCategoriesGet200TextJsonResponse"];
          "application/xml": components["schemas"]["MetaCategoriesGet200ApplicationXmlResponse"];
          "text/xml": components["schemas"]["MetaCategoriesGet200TextXmlResponse"];
        };
      };
    };
  };
  /** Gets a list of valid RoadDisruption severity codes */
  Road_MetaSeverities: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["MetaSeveritiesGet200ApplicationJsonResponse"];
          "text/json": components["schemas"]["MetaSeveritiesGet200TextJsonResponse"];
          "application/xml": components["schemas"]["MetaSeveritiesGet200ApplicationXmlResponse"];
          "text/xml": components["schemas"]["MetaSeveritiesGet200TextXmlResponse"];
        };
      };
    };
  };
}

export interface external {}
